define(["require","exports","./LexAnalyser","./Parser"],function(a,b,c,d){"use strict";var e=new c.LexAnalyser,f=function(){function a(){this.lexems=[],this.poliz=new d.Parser,this.isValid=!1,this.error=""}return Object.defineProperty(a.prototype,"Input",{get:function(){return this.input},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"IsValid",{get:function(){return this.isValid},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"Error",{get:function(){return this.error},enumerable:!0,configurable:!0}),a.prototype.parse=function(){for(var a,b=new Array,c=this.input.replace(/\s+/g,"").concat(";").split(""),d=0;d<c.length;d++)(a=e.MakeStep(c[d])).type&&b.push(a);return b},a.prototype.Parse=function(a){this.input=a.replace(/\s+/g,"");try{this.lexems=this.parse(),this.poliz.Parse(this.lexems),this.isValid=!0}catch(b){this.isValid=!1,this.error=b}},a.prototype.getResult=function(a){return void 0===a&&(a=[]),this.poliz.Execute(a)},a}();b.Expression=f});